% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Segment-generics.R, R/Expr-methods.R, R/Segment-methods.R
\docType{methods}
\name{ScopeLevel}
\alias{ScopeLevel}
\alias{ScopeLevel,gaSegMetExpr-method}
\alias{ScopeLevel,gaSegmentFilterList-method}
\alias{ScopeLevel<-}
\alias{ScopeLevel<-,gaMetExpr,character-method}
\alias{ScopeLevel<-,gaSegmentFilterList,character-method}
\title{ScopeLevel.}
\usage{
ScopeLevel(object, value)

ScopeLevel(object) <- value

\S4method{ScopeLevel}{gaSegMetExpr}(object)

\S4method{ScopeLevel}{gaMetExpr,character}(object) <- value

\S4method{ScopeLevel}{gaSegmentFilterList}(object)

\S4method{ScopeLevel}{gaSegmentFilterList,character}(object) <- value
}
\arguments{
\item{object}{Segment condition or combined segment conditions or metric
expression.}

\item{value}{If a new scope level is supplied, then this function will return
an updated copy of the supplied object with the new scope applied.}
}
\description{
Get the scope level of a gaDynSegment or gaMetExpr

Set the scope level of a gaDynSegment or a gaMetExpr
For segments, one of 'users' or 'sessions'
For metric expressions one of 'perUser', 'perSession' or 'perHit'
}
\section{Methods (by class)}{
\itemize{
\item \code{gaSegMetExpr}: Return the scope of the supplied metric used within a
segment definition.

\item \code{object = gaMetExpr,value = character}: Set the scope, as described by a character value, to
be applied to the supplied metric condition for use within a segment
expression.

\item \code{gaSegmentFilterList}: Return the scope of the supplied gaSegmentFilterList.

\item \code{object = gaSegmentFilterList,value = character}: Set the scope level of a gaSegmentFilterList to either
"user" or "session" level.
}}

